{"pages":[{"text":"Code4future 網誌 從小就學習程式的目的, 無非就是要這些未來的主人翁能夠及早了解數位系統的特性, 並且有效率地利用這些數位工具, 來解決類比世界所面臨的各種問題. 是的, 學習編程是要您用它來解決問題, 解決學習上的問題, 解決提升生活效能的問題, 解決單憑藉類比工具無法單獨解決的問題. 在華人世界推動兒童編程教學, 我們有兩個信念： 1. 編程的學習必須要能為其他的功課學習加分. 2. 任何有心推動類似活動的單位, 都能自由取得本站各種內容. 因為我們相信, 重要的事要能讓更多人參與. 您可以從 https://github.com/code4futuretw/blogsite 下載網站的內容. 這個倉儲的 gh-pages 分支, 就是 code4future.org 網站上的內容, 我們從 https://github.com/aroberge/reeborg 下載基本資料之後, 將原本無法直接在 Github pages 佈署的程式碼加以修改, 以便能夠讓兒童編程教學的推動者, 在沒有廣域網路連線的情況下來使用 Reeborg 機器人編程教學. code4fugure 在華人世界推動編程教學, 主要的服務對象有兒童 (6-18歲)、家長以及兒童的老師, 假如您已經熟悉 Git 與 Github 的用法, 您可以直接 git clone 本倉儲 gh-pages 分支的資料, 然後利用 Github Pages 的服務來建立網站, 也可以將倉儲 git clone 到近端電腦硬碟中, 只要操作系統中有 Python3 環境, 就可以透過 Python3 的 python -m http.server 指令, 在近端的區域網路伺服 Reeborg 機器人網站. 假如您對上面所提到的用法都不熟悉, 那麼, 我們將會在隨後, 加入對於有心推動兒童編程的家長與老師所需要的導引內容. 感謝您的到來, 希望編程教學的推廣可以讓更多的兒童及早進入數位世界, 發覺學習的樂趣, 創造更美好的未來.","url":"http://blog.code4future.org/blog/pages/about/","tags":"misc","title":"About"},{"text":"社會人士學習電腦的課題很廣, 我們只能提供較為廣泛的電腦基本使用功能與觀念的導引, 例如, 有關 Windows 與 Ubuntu 操作系統的取捨, 如何運用網路與網站來提升工作效率等. Code4Future 將與社會人士學習電腦的主題劃分為: 電腦基本軟硬體層次, 桌上型、筆記型與卡片型電腦的取捨, Windows 或 Ubuntu 操作系統? 基本的本地端網路協定、設定與應用 區域網路上的全球資訊網伺服器與雲端全球資訊網伺服器的應用 全球資訊網上, 免費學習電腦編程的網站: CodeCademy： https://www.codecademy.com/ FreeCodeCamp: https://www.freecodecamp.com/ Udemy: https://www.udemy.com/ Khanacademy: https://www.khanacademy.org/computing/computer-programming","url":"http://blog.code4future.org/blog/you-guan-she-hui-ren-shi-xue-xi-dian-nao.html","tags":"社會人士","title":"有關社會人士學習電腦"},{"text":"台灣是全世界重要的個人電腦生產國之一, 假如能夠有系統收集歷史上與數位運算相關的軟硬體相關資訊, 成立一個實體或虛擬的數位運算博物館, 那麼, 或許下一代年輕人能藉以鑑往知來, 在全球數位公民中扮演更重要的角色. 英國運算博物館 (National Museum of Computing): 電腦發展史: 電腦博物館 (Computer Museum): https://en.wikipedia.org/wiki/The_Computer_Museum,_Boston http://www.computerhistory.org/ http://tcm.computerhistory.org/ 從數位基礎到應用: http://www.nand2tetris.org/","url":"http://blog.code4future.org/blog/shu-wei-yun-suan-bo-wu-guan.html","tags":"專題研究","title":"數位運算博物館"},{"text":"Code for Life https://www.codeforlife.education/ 是一套適合幼稚園到國小兒童使用的編程教育套件. Rapid Router 則是其中由英國 Ocado 公司在 2015 年 10 月份開源 釋出的全球資訊網套件 ( Rapid Router Github 倉儲 , Code for Life Twitter ), 採用 Javascript 與 Python 編寫, 並且架構在 Django 全球資訊網框架上. Rapid Router 從圖像編程入手, 規劃了適合 5-11 歲孩童電腦教學的教材, 並且逐步導入 Python 程式語法的教學, 其中的每一份教材都明確訂出進度與標的: http://storage.googleapis.com/codeforlife-assets/general_resources/introduction_to_coding.pdf . 同時, 老師註冊帳號後登入系統 ,就可以下載規劃完整的教學導引與學習評量內容, 儘管全部教材都是英文, 但若能夠藉由此份\"快車找路\"的類遊戲編程教學中, 讓孩童同時學習簡單的英文字句, 應該也是很不錯的額外收穫.","url":"http://blog.code4future.org/blog/codeforlife-bian-cheng-tao-jian-jie-shao.html","tags":"K-12","title":"CodeForLife 編程套件介紹"},{"text":"全球資訊網上有兩種基本的 Blog 架構, 動態的網誌以 Wordpress 為代表, 而靜態的網誌則以 Pelican 為例. 這一篇文章的目的, 在介紹 Code4Future 團隊如何利用 PHP、Python3, 在 OpenShift 雲端平台與 Github 版次管理系統中, 用同 Leo Editor 的專案架構, 以同一份內容, 幾乎同步地更新到動態與靜態的兩個網站. 首先, Code4Future 目前的動態網站為: http://www.code4future.org , 而靜態網站則位於 http://blog.code4future.org . 其中的動態網站採用 Openshift 雲端平台建構, 而靜態網頁則架構在 Github Pages 上. 從 https://github.com/code4futuretw/blogsite 倉儲, 可以取得 http://blog.code4future.org 靜態網誌上的所有資料 ,包括 Pelican 設定與 Leo Editor 專案檔中的所有按鈕指令程式碼. 首先來看, 如何在 OpenShift 建立一個 Wordpress 網誌: 到 https://www.openshift.com/ 申請一個帳號. 收到 OpenShift 信件後, 按回電子郵箱的確認連結, 就可以開始在 OpenShift 雲端平台上建立應用程式. 建立應用程式時, 選擇建立 Wordpress 類別的網誌, 並且選擇可用的網域名稱與應用程式名稱, 就可完成 Wordpress 起始設定. 當建立 Wordpress 應用程式完成後, 使用者即可進行網誌的設定, 其中包括管理者帳號的建立與基本網誌設定. 至於 Github Pages 上的 http://blog.code4future.org 靜態網誌, 其架構則比較複雜, 一方面, 我們採用 Leo Editor 來管理所有資料. 當使用者從 https://github.com/code4futuretw/blogsite 倉儲 git clone 資料到本地端之後, 必須依靠 Python3, PyQt, Pelican 與 Git 才能順利在本地端與 Github Page 分支端, 順利建立並管理這個靜態網誌系統. 此外, 我們建構靜態網頁系統的目的, 是希望爾後在實體課堂中推廣 Code4Future 的各階段教材時, 可以無需上到廣域網路, 利用隨身硬碟與區域網路就能夠上課. 因此 Github 倉儲中的 Pelican 系統又分為本地端與雲端平台上的轉檔設定. 使用本靜態網頁時, 基本工作流程如下: 從 https://github.com/code4futuretw/blogsite 倉儲, git clone 資料到本地端. 確定工作目錄中為倉儲的 gh-pages 分支內容. 利用 Leo Editor 5.1 以後的版本, 開啟 users 目錄下的 c4f.leo, 就可以看到本站的所有資料. 修改設定檔案內容. 根據網誌 md 檔案中的格式, 編寫新網誌文章. 先利用本地端所屬的 local-pelican 按鈕建立網誌文章. 本地端內容查詢無誤後, 再用 gh-pages-pelican 按鈕, 產升即將送到雲端上的 Pelican 網誌內容 至於將 Pelican 中的 .md 檔案內容, 送到 Wordpress, 則配合 new-to-wp-pelican, edit-to-wp-pelican 與 get-from-wp-pelican 等3個按鈕指令.","url":"http://blog.code4future.org/blog/ru-he-jia-gou-yi-ge-dong-jing-jie-yi-de-wang-zhi-xi-tong.html","tags":"社會人士","title":"如何架構一個動靜皆宜的網誌系統"},{"text":"數位運算裝置融入各種教學的趨勢已經不可避免, 身為幼稚園到國小的教師, 可以利用現有的優秀教材來推廣學童電腦教學. 這裡先介紹來自台灣, 兩個很棒的線上教材: 均一教育平台: http://www.junyiacademy.org/ 橘子蘋果程式設計學苑: https://orangeapple.co/ 均一平台上的電腦課程: Scratch: http://www.junyiacademy.org/root/isc Javascript: http://www.junyiacademy.org/root/ijs 一小時玩程式: http://www.junyiacademy.org/computer-science-a/ihc 數學式與 LaTeX: http://www.junyiacademy.org/computer-science-a/i5t 橘子蘋果開放教材: https://orangeapple.co/csr/open-material 最後則介紹來自美國哈佛大學的 Scratch 開放教材: http://scratched.gse.harvard.edu/guide/","url":"http://blog.code4future.org/blog/you-guan-xue-tong-dian-nao-jiao-xue.html","tags":"教師","title":"有關學童電腦教學"},{"text":"無論您從事那一個行業, 週遭一定充滿了各種網路與大小電腦的應用, 從大樓的門禁開始, 電梯、飲水機, 更不用提許多人辦公地點幾乎都各有一台桌上型或筆記型的個人電腦, 透過無線或有線網路與各種資訊系統或網站相連, 未來, 有關網路與電腦的各種應用, 更會密切涉入現代人的生活. 因此, 身為家長的您, 除了必須體認到未來的現代國民已經離不開網路與電腦之外, 必須了解目前全世界有關網路內容分級, 都是採取軟性的自我管制模式, 所以各位家長必須自己在家裡, 嚴格制定未成年兒童的網路使用政策. 我們的認知: 未成年兒童, 不應該獨自使用公共網路, 更不應該在沒有家長的管制下, 上網交友. 根據 Facebook 的規定 13 歲以上 才能建立帳號, 也就是 grade 7, 國中之後的年輕人才能夠使用臉書, 所以身為家長, 必須限制國小學童在家自由使用網路與電腦 (包括手機) 的權力, 假如配合學校功課的要求, 13 歲之前的孩童, 最好是在家長的陪同下使用廣域網路與電腦.","url":"http://blog.code4future.org/blog/jia-chang-ru-he-zhi-ding-wang-lu-shi-yong-zheng-ce.html","tags":"家長","title":"家長如何制定網路使用政策"},{"text":"學電腦?學習寫程式?然後呢? 學電腦是一個非常廣的題目, 因為電腦原來的意思是計算器, 現在的計算器到處都是, 從冷氣的溫度控制到手機, 都是不同等級的電腦. 所以嚴格來說, 與電腦有關的學習是學不完的, 當全世界許多現代人都已經離不開電腦的時候, 所謂的學電腦, 應該是指: 了解電腦的基本軟體與硬體運作原理 了解電腦的基本操作方法 了解如何操控電腦, 並且用電腦來協助解決問題 接著來回答, 為什麼大家都叫你學電腦?最主要的原因就是, 現代人無論從事那一個行業, 都需要依賴電腦來解決問題, 所以假如學生能夠從小就知道什麼叫作數位運算, 有那些特性, 與現實世界的運作有那些關聯, 學習如何利用電腦來增加工作效率, 那麼才能在父母與老師的協助下, 真正發揮電腦的功用. 這一篇文章的類別是: K-12, K 指的是幼稚園的學生, 也就是五歲到六歲的孩童, 我們當然不是寫文章給幼稚園的小朋友看的, 但這裡指的 12, 就是 12 年國教的學生, 從小學一年級開始到高中畢業, 總共 12 年, 假如你是國小高年級以上的學生, 已經可以利用 Code4future 網站上的資料, 進行自學, 但是我們並不鼓勵你們這樣做, 因為你們還沒有成年, 也就是還沒有滿十八歲, 根據我們的經驗, 未成年的學生是不允許獨自上網的, 希望能夠在家長或老師的指導下, 下載 Code4future 上的教案資料, 可以在沒有外部網路 (也稱為廣域網路) 的單機或內部網路上執行. 我們特別鼓勵過去以為學電腦就是玩遊戲的國小高年級學生, 能夠在家長與老師的協助下, 儘早學習利用電腦來解決問題的訣竅, 讓你可以更加了解學習的樂趣, 並且有效率地學習其他學科, 以便空出更多時間發展個人技藝或專長. 這裡要介紹的電腦程式學習課程之一是 Reeborg 機器人: http://reeborg.ca/world.html , 假如你用瀏覽器打開這個頁面之後, 完全看不懂其中的英文字與說明段落, 我們希望你不要用翻譯軟體來看這些資料, 因為我們要告訴你, 想學好電腦, 英文能力是必備條件, 而且基本的數學能力也是有效運用電腦的另一個必要條件, 所以不要以為只要學會使用電腦, 就可以丟開其他課本, 正確的學習電腦觀念是: 未成年學生不要獨自上網, 因為網路上沒有用的東西比有用的資料, 多了許多, 你要在老師與家長的安排之下才能使用電腦與網路. 電腦與數學及英文, 或者其他各種學科, 都有很密切的關聯, 學習電腦是要讓你的學習更有效率, 及早掌握現代人協同合作的方式. 學習電腦的主要目的在解決問題, 這些問題當然包括用有效率的方式來提供使用者遊戲或運動或玩樂. 最後, 我們再次提醒你, 為什麼大家都叫你學電腦? 因為我們希望你未來能夠快速融入國際社會, 利用電腦解決各種問題, 做一個有用的青年, 造福社會!","url":"http://blog.code4future.org/blog/wei-shi-mo-da-jia-du-yao-ni-xue-dian-nao.html","tags":"K-12","title":"為什麼大家都要你學電腦?"},{"text":"這裡可以放入文章的摘要內容 文章標題 這裡開始文章內容 文章內放入超文件的連結: http://code4future.org 文章子標題 文章內放入圖片: 引入程式碼 1 2 3 4 5 6 7 8 9 10 import math # Pythagoras Theorem def hypotenuse ( side1 , side2 ): return math . sqrt ( math . pow ( side1 , 2 ) + math . pow ( side2 , 2 )) side1 = 3 side2 = 4 h = hypotenuse ( side1 , side2 ) print ( a right triangle with side1 = \", side1, \" and side2 = \", side2, \" the hypotenuse is : \", h)","url":"http://blog.code4future.org/blog/code4future-user-wen-zhang-tao-gao.html","tags":"專題研究","title":"Code4future user 文章套稿"}]}