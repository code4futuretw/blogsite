<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Code4future</title><link href="http://blog.code4future.org/blog/" rel="alternate"></link><link href="http://blog.code4future.org/blog/feeds/she-hui-ren-shi.atom.xml" rel="self"></link><id>http://blog.code4future.org/blog/</id><updated>2016-07-17T19:22:06+08:00</updated><entry><title>我們如何建立這個網站 (三)</title><link href="http://blog.code4future.org/blog/wo-men-ru-he-jian-li-zhe-ge-wang-zhan-san.html" rel="alternate"></link><updated>2016-07-17T19:22:06+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-07-17:blog/wo-men-ru-he-jian-li-zhe-ge-wang-zhan-san.html</id><summary type="html">&lt;p&gt;在前兩篇文章中, 我們利用自己在 Godaddy 所購買的網域名稱, 配合 OpenShift 雲端平台, 建立了一個 &lt;a href="http://demo.code4future.org"&gt;http://demo.code4future.org&lt;/a&gt; 網站. 在這篇文章中, 我們將要加入 disqus 留言系統功能, 並且要利用 reCAPTCHA 來保護我們的帳號登錄流程, 減少被廣告商恣意利用程式方法入侵網誌系統.&lt;/p&gt;


&lt;p&gt;Step 1: &lt;/p&gt;
&lt;p&gt;登入 Wordpress 網站.&lt;/p&gt;
&lt;p&gt;由於 disqus 與 reCAPTCHA 的導入採用 Wordpress plugin 方法, 因此要導入的第1步就是登入我們已經建好的 Wordpress 網站:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;登入後, 選擇 Plugins-&amp;gt;Add New 表示要新增 Plugins:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;首先利用 Disqus Comment System 作為關鍵字, 找出 Plugin, 然後安裝後 activate: &lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus3.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著用 WordPress ReCaptcha Integration 作為關鍵字, 找出 Plugin, 也是安裝之後 activate:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus4.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著設定 ReCaptcha plugin, 先點進 ReCaptcha, 然後在另外一個頁面, 登入 Gmail 帳號, 因為需要登入電子郵箱後取得設定用的 Site key 與 secret key, 以下為設定過程中的參考畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus5.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus6.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus7.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus8.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus9.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus10.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus11.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus12.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著設定 Disqus 留言系統, 先從 Plugins 頁面中的 Disqus Comment System 選擇其下的 Configure:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus13.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;然後點選 Upgrade, 以配合隨後要加入的 Disqus 留言系統:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus14.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;在 Install Disqus Comments 過程中, 需要註冊一個 Disqus 帳號, 若已經有 Disqus 帳號, 則在下圖中輸入 Disqus 帳號與密碼, 若尚未建立 Disqus 帳號, 則利用 dont have a Disqus Profile yet 申請:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus15.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;如下圖所示, 可以用 Gmail 帳號登入, 以便串聯隨後要申請的 Disqus 帳號:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus16.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著利用 Gmail 郵箱作為帳號, 輸入要作為 Disqus 帳號的密碼後, 就可以完成 Disqus 帳號建立:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus17.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;Disqus 帳號建立後登入, 可以利用滑鼠右鍵從 Disqus Home 頁面最右方的設定圖像, 帶出 Add Disqus to site 頁面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus18.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著將 Add Disqus to site 頁面拉到最底下的左方, 點選 Get Started:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus19.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著註冊一個留言專用的 site name,  這裡使用了 demo_c4f_org 作為 site name, Wordpress 將會使用這個名稱當作留言系統的對應名稱:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus20.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著按下同意使用條款後, 就可以回到 Wordpress 測試設定是否成功:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus21.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;一旦使用者在 Disqus 註冊了留言系統後, 登入 Disqus 後, 就可以從 Home 頁面的 Admin 連結, 進入各 site name 的管理頁面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus22.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus23.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接續前面 Wordpress Disqus Comment System plugin 的設定, 只要登入 Disqus, 就會出現下列畫面, 可以選擇要附加的留言 site name, 下圖只有一個 demo_c4f_org 可以選擇:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus24.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;按下 Next, 就會出現 Disqua 留言系統已經設定完成:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus_25.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;另外, 如下圖所示, 在啟用 Disqus 之前, 必須用登錄的 Gmail 進行帳號驗證的動作, 才能開啟 Disqus 留言功能:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus26.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus27.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus28.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;最後, 我們要修改 Awesomeone theme 主題中 slider 的標題, 說明文字與對應連結, 如下圖所示, 先進入 Appearance-&amp;gt;Customize:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus29.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;如下圖, 往下拉, 選擇 slider settings:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus30.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;如下圖, 左側就是 Awesomeone theme 目前三張 sliders 的設定欄位, 可以依照實際需求修改:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/disqus/c4f_disqus31.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;結語&lt;/p&gt;
&lt;p&gt;在這篇文章中, 我們承接前面兩篇文章建立 Wordpress 網誌, 加入兩個 plugins, 分別用來提升網誌留言系統的效能, 並且利用 reCAPTCHA plugin 來防止駭客利用程式方法擾亂我們所建立的網站, 最後還展示如何修改 Awesomeone theme 主題中的 Sliders  內容.&lt;/p&gt;</summary><category term="專題研究"></category><category term="網誌架構"></category><category term="Wordpress"></category><category term="Godaddy"></category><category term="OpenShift"></category></entry><entry><title>我們如何建立這個網站 (二)</title><link href="http://blog.code4future.org/blog/wo-men-ru-he-jian-li-zhe-ge-wang-zhan-er.html" rel="alternate"></link><updated>2016-07-17T16:46:45+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-07-17:blog/wo-men-ru-he-jian-li-zhe-ge-wang-zhan-er.html</id><summary type="html">&lt;p&gt;在上一篇文章中, 我們介紹了如何利用 Gmail 郵箱在 OpenShift 雲端平台上登記免費的帳號, 如何在 OpenShift 建立 Wordpress 網站, 如何更改 theme 頁面主題, 而這個 OpenShift 平台上的 Wordpress 網站所使用的網址, 是由 OpenShift 提供, 主要是以使用者建立的應用程式名稱, 加上使用者所選的 namespace, 然後再疊上 rhcloud.com.&lt;/p&gt;


&lt;p&gt;在這篇文章中, 我們將說明如何在 Godaddy DNS 設定中, 利用 www 當作主機代號, 疊上我們所購買的 domain name (也就是 code4future.org), 並且利用 DNS 架構中的 CNAME (別名) 將這個網址指到 OpenShift 的 Wordpress 網站, 最後再登入到 OpenShift 平台, 將原先 RedHat 附贈的網站名稱改為 Godaddy DNS 管理中所設定的網址名稱, 就可以完成使用我們所購買的 domain name 來跑 OpenShift 上的 Wordpress 網誌網站.&lt;/p&gt;
&lt;p&gt;接下來的操作步驟, 目的就是要將第一篇我們已經完成的 Wordpress 網站網址, 對應為我們所購買的符號名稱, 也就是我們要將 wp-topuniversity.rhcloud.com 改為 demo.code4future.org.&lt;/p&gt;
&lt;p&gt;這個設定, 總共牽涉到 3 個基本操作:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Godaddy 帳號中的 DNS 管理.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wordpress 網站中的網址設定.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OpenShift 平台上應用程式改用新的對應網址設定.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以實際操作流程為例, 我們在第 1 項 Godaddy 帳號中的 DNS 管理, 就是要利用 CNAME 設定, 將 demo.code4future 指向 wp-topuniversity.rhcloud.com.&lt;/p&gt;
&lt;p&gt;而第 2 項 Wordpress 的設定, 就是要將原先建立應用程式時所選擇的網址 wp-topuniversity.rhcloud.com 改為 demo.code4future.org.&lt;/p&gt;
&lt;p&gt;至於第 3 項則需要登入到 OpenShift, 進入 wp-topuniversity.rhcloud.com 應用程式的設定區, 把原先網站使用的 wp-topuniversity.rhcloud.com 改為 demo.code4future.org.&lt;/p&gt;
&lt;p&gt;Stpe 1:&lt;/p&gt;
&lt;p&gt;首先必須登入 Godaddy.&lt;/p&gt;
&lt;p&gt;登入後的畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;點選 Domains, 進入類似下列的畫面, 選擇要管理的 domains 名稱列, 點選其後的 Manage DNS 連結:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;進入 DNS Management 畫面後, 可以看到 Records 右下方有一個 Add 按鈕:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy3.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;這時要建立一個 Record Type 為 CNAME 的 DNS 紀錄, 因此在按下 Add 之前, 必須先從左下方的選單中, 選擇 CNAME:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy4.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;按下 Add 之後, 必須分別在 CNAME 紀錄選單中的 Host 欄位與 Points to 欄位填上網站的名稱, 下列畫面的 Host 名稱, 填入 www, 表示要在 code4future.org 網域中 (請特別注意, Host 欄位中只需要填入 www 或 demo, 而不要填入 www.code4future.org 或 demo.code4future.org), 新增一個 Host 名稱為 www, 若再疊上網域, 網站名稱就成為 www.code4future.org, 假如在 Host 欄位填上 demo, 表示這個 CNAME 別名網站的網址就會是 demo.code4future.org.&lt;/p&gt;
&lt;p&gt;至於 Points to 欄位, 表示這個 domain 網址別名要指向那一個網站, 在此案例中, 我們希望 demo.code4future.org 能夠指向 wp-topuniversity.rhcloud.com, 因此在 Points to 欄位中就必須填入 wp-topuniversity.rhcloud.com, 如下列畫面所示:&lt;/p&gt;
&lt;p&gt;另外, 下列畫面中的 Host 雖然以 www 呈現, 但是我們在這裡的實際操作是讓 demo.code4future.org 指向 wp-topuniversity.rhcloud.com.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy5.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;在上述 Godaddy 帳號中, 隸屬於我們所購買網址的 DNS Manage, 新增一筆 DNS CNAME 別名設定並存檔後, 假如我們這時以瀏覽器連結 http://demo.code4future.org, 就會出現下列錯誤的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy6.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy7.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy8.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy9.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;目前以 demo.code4future.org 新的網址連結會產生錯誤, 主要原因在於, 雖然 Godaddy 中已經將 demo.code4future.org 以 DNS 別名設定指向 wp-topuniversity.rhcloud.com, 但是 Wordpress 中的網址仍然設為 wp-topuniversity.rhcloud.com. &lt;/p&gt;
&lt;p&gt;因此接下來就要登入 wp-topuniversity.rhcloud.com 網站, 將應用程式的網址改為 demo.code4future.org.&lt;/p&gt;
&lt;p&gt;Step 2:&lt;/p&gt;
&lt;p&gt;登入 Wordpress 網站, 請注意這個時候要利用第 1 篇所完成的 Wordpress 網址登入, 在這裡網站符號名稱為 wp-topuniversity.rhcloud.com, 登入前畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy10.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;登入 Wordpress 網站後的畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy11.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接下來我們要進入 Settings-&amp;gt;General 設定中, 點選畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy12.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;進入 General settings 後畫面如下, 這時可以看到 Wordpress 網誌所使用的網址為 wp-topuniversity.rhcloud.com.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy13.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;下圖則顯示已經將原先使用的 wp-topuniversity.rhcloud.com 改為第 1 步 DNS 設定中所使用的 demo.code4future.org：&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy14.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy15.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;完成 Godaddy 的 DNS 設定, 並且將 Wordpress 原先使用的網址改為 demo.code4future.org, 整個網站仍無法正常運作, 因為 OpenShift 端仍然使用 wp-topuniversity.rhcloud.com 當作平台網站的符號名稱.&lt;/p&gt;
&lt;p&gt;因此接著登入 OpenShift, 準備進行第 3 步網站名稱的修改.&lt;/p&gt;
&lt;p&gt;Step 3:&lt;/p&gt;
&lt;p&gt;登入 OpenShift 後進入應用程式, 畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy16.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;進入要修改網址的應用程式連結後, 畫面如下, 這時點選 change, 表示要更改網站符號名稱:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy17.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;按下 change 按鈕後, 在 Domain name 欄位中填入新網站名稱, 在此一案例中, 新網站名稱為 demo.code4future.org:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy18.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy19.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;儲存新網站設定名稱後, 回到 OpenShift 應用程式設定畫面後, 網站名稱已經變成 demo.code4future.org 了.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy20.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;假如上述的設定順利完成, 那麼恭喜您, 如下圖所示, 你的 Wordpress 網誌已經成功改用您所選定的網址, 在這個範例中 ,就是 &lt;a href="http://demo.code4future.org"&gt;http://demo.code4future.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/godaddy/c4f_godaddy21.jpg" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;總結&lt;/p&gt;
&lt;p&gt;我們在第 1 篇說明中, 已經完成在 OpenShift 平台上建立一個 Wordpress 網站, 但是使用的是 rhcloud.com 的網址, 雖然 namespace 與應用程式名稱都可以自選, 但是我們可以利用上述的3個步驟設定, 以我們自己從 Godaddy 所購買的網域中的一個對應網址來跑 Wordpress 網誌, 因此我們總共進行了 3 個不同系統中的設定.&lt;/p&gt;
&lt;p&gt;第 1 項設定是 Godaddy 帳號中的設定, 建立一個別名 (CNAME), 將 demo.code4future.org 指向 wp-topuniversity.rhcloud.com.&lt;/p&gt;
&lt;p&gt;第 2 項設定則是 Wordpress 系統本身, 必須登入後在 Settings-&amp;gt;General 中, 將運行 Wordpress 的網址, 從 wp-topuniversity.rhcloud.com 改為 demo.code4future.org, 總共有兩個欄位必須更改.&lt;/p&gt;
&lt;p&gt;而第 3 項設定則是 OpenShift 平台中應用程式所採用的 domain name alias 修改, 將原先使用的 wp-topuniversity.rhcloud.com 改為 demo.code4future.org.&lt;/p&gt;
&lt;p&gt;完成上述一連串設定後, 終於可以用自己選定的網址來執行 Wordpress 網誌了.&lt;/p&gt;</summary><category term="專題研究"></category><category term="網誌架構"></category><category term="Wordpress"></category><category term="Godaddy"></category><category term="OpenShift"></category></entry><entry><title>我們如何建立這個網站 (一)</title><link href="http://blog.code4future.org/blog/wo-men-ru-he-jian-li-zhe-ge-wang-zhan-yi.html" rel="alternate"></link><updated>2016-07-17T16:45:55+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-07-17:blog/wo-men-ru-he-jian-li-zhe-ge-wang-zhan-yi.html</id><summary type="html">&lt;p&gt;在這篇文章中, 我們將介紹 code4future 的網誌是如何建立的.&lt;/p&gt;


&lt;p&gt;這幾天我們發現, 大約在一年之前利用 OpenShift 雲端平台所搭建的 Wordpress 網站, 幾乎全部都被駭客攻陷, 根據初步的了解, 駭客是從 OpenShift 雲端平台啟動的程式碼置入惡意軟體, 讓連結到這些網站的用戶, 被強迫指到一些惡意網站, 因此這些 Wordpress 網站在修復之前, 幾乎已經完全癱瘓, 已經無法正常運作. 在此希望我們這個網站不會有這樣的下場.&lt;/p&gt;
&lt;p&gt;首先, 先來看看, 一個網站之所以能被使用者連結所需要的幾項元素:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;網站符號名稱.&lt;/li&gt;
&lt;li&gt;全球資訊網伺服器.&lt;/li&gt;
&lt;li&gt;執行網誌功能的程式套件.&lt;/li&gt;
&lt;li&gt;依附在網誌套件上的其他延伸功能套件.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以 code4future.org 網站來說, 這個網址是在 Godaddy 服務商購買的, 網址所對應的 DNS 設定也是交由 Godaddy 處理.&lt;/p&gt;
&lt;p&gt;至於 code4future.org 網站的全球資訊伺服器採用 OpenShift 的雲端平台服務, 而 OpenShift 是建構在 RedHat 操作系統上, 而在雲端操作系統上, OpenShift 採用的全球伺服器是 Apache, 我們只要有一個能夠收信的電子郵箱, 就能夠在 OpenShift 雲端平台上登記帳號, 也能夠很快建立各種雲端伺服應用程式, 也就能夠使用 OpenShift 所提供的全球伺服器服務.&lt;/p&gt;
&lt;p&gt;第 3 項, code4fugure.org 網站所使用的網誌是 Wordpress, 這是一套利用 PHP 程式語言所編寫的 Blog 套件, 至於與套件結合的資料庫, 則是採用 MySQL 系統.&lt;/p&gt;
&lt;p&gt;至於第 4 項則是在 Wordpress 建立完成之後, 為了要延伸網誌的功能, 可以增加 Plugin 套件, 就 code4future.org 的網誌來說, 最重要的延伸功能就是將原先的留言系統改為 disqus 系統, 以方便使用者可以透過 disqus, gmail, facebook 或 twitter 等網站的帳號登入留言.&lt;/p&gt;
&lt;p&gt;好了, 為了要在 OpenShift 建立一個  Wordpress 網站, 我們需要一個 Gmail 電子郵箱.&lt;/p&gt;
&lt;p&gt;Step 1:&lt;/p&gt;
&lt;p&gt;登入到您的 Gmail 電子郵箱, 登入後將會在第 2 步完成 OpenShift 帳號登記後, 再回到 Gmail 來點按確認信連結.&lt;/p&gt;
&lt;p&gt;說明: 因為當我們在 OpenShift 雲端平台登記帳號後, OpenShift 會寄出確認信, 我們必須回覆確認信後, 才能夠在 OpenShift 平台上建立全球資訊網應用程式.&lt;/p&gt;
&lt;p&gt;以下為登入到 Gmail 的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_logintogmail.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;Step 2:&lt;/p&gt;
&lt;p&gt;利用瀏覽器, 連結到 &lt;a href="https://www.openshift.com/"&gt;https://www.openshift.com/&lt;/a&gt;, 然後利用步驟 1 的 Gmail 電子郵箱帳號, 登記一個 OpenShift 雲端平台帳號. 登記完成後, OpenShift 會以登記的 Gmail 帳號寄出確認信件, 使用者必須確認擁有所登記的電子郵箱後, 才能開始使用 OpenShift.&lt;/p&gt;
&lt;p&gt;從下圖可以看到右上方 Sign up for free 的紅色連結:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_signupopenshift.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;下圖則為 Sign up OpenShift 帳號的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_signupopenshift1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;下圖則為登記 OpenShift 帳號後, 系統會寄出一封驗證電子郵箱擁有人的信件:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_signupopenshift2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;Step 3:&lt;/p&gt;
&lt;p&gt;當使用者完成 OpenShift 帳號登記的確認流程後, 就可以從 &lt;a href="https://openshift.redhat.com/app/login"&gt;https://openshift.redhat.com/app/login&lt;/a&gt;, 以所登記的帳號密碼登入 OpenShift.&lt;/p&gt;
&lt;p&gt;下圖則為登入 OpenShift 雲端平台後的畫面, 可以開始建立應用程式:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_logintoopenshift.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;Step 4:&lt;/p&gt;
&lt;p&gt;當使用者登入 OpenShift 平台後, 就可以利用 Create your first application now 連結, 建立一個 Wordpress 4 的雲端網站. 當首次在 OpenShift 雲端平台上建立應用程式, 必須要選擇一個應用程式所屬的 namespace, 也就是 RedHat 用來建立網站網址的重要依據, 例如我們在這個範例中, 所選擇的 namespace 為 topuniversity, 因此隨後所建立的網站應用程式的網址都將以 topuniversity.rhcloud.com 作為網址符號名稱的後半段, 而前半段, 則是使用者所選擇的應用程式名稱, 例如我們選擇目前所建立的 OpenShift 雲端平台應用程式名稱為 wp, RedHat 就會將此應用程式的網址設為 wp-topuniversity.rhcloud.com&lt;/p&gt;
&lt;p&gt;選擇好 namespace 與 application name 之後, 按下 Create Application, 就可以完成此一應用程式的建立.&lt;/p&gt;
&lt;p&gt;從下圖可以看到建立應用程式時, 選擇建立 Wordpress 4 應用程式:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_createwordpresssite.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_createwordpresssite1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;下圖則是設定 namespace 與應用程式名稱的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_namespace_app_name.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;完成應用程式建立的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_openshiftappcreated.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;Step 5:&lt;/p&gt;
&lt;p&gt;當 OpenShift 雲端平台上的 Wordpress 應用程式建立完成後, 我們選擇 Visit app in the browser, 就可以開始在雲端安裝 Wordpress. 我們選擇以英文介面安裝, 接著輸入 Site Title, 以及網站管理者的帳號與密碼, 還有電子郵箱, 並註記是否要讓搜索引擎搜尋網站內容選項後, 按下 install Wordpress, 就可以開始進行安裝.&lt;/p&gt;
&lt;p&gt;完成 Wordpress 應用程式建立後, 點選網站進入後, 可以開始安裝 Wordpress, 先選擇安裝的語系:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_startwpinstall.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著選擇網站名稱, 以及管理者的帳號密碼, 以及電子郵箱等:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_wordpressinstallwelcome.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;安裝完成後, OpenShift 平台會傳回 Success 的畫面. 接著點下 login, 網站就會以 https 協定, 跳轉到 Wordpress 的登入畫面.&lt;/p&gt;
&lt;p&gt;下圖則是成功完成 Wordpress 安裝的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_wordpresssucess.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;恭喜您, 您已經在 OpenShift 雲端平台上建立了一個 Wordpress 網站, 以現在所建立的範例網誌為例 ,就是 &lt;a href="http://wp-topuniversity.rhcloud.com"&gt;http://wp-topuniversity.rhcloud.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下圖則是登入畫面, 特別注意必須在 https 模式下才可以輸入帳號密碼:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_wordpressfirstlogin.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;下圖則已經以管理者身份登入 Wordpress:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_wordpresslogintoadmin.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;下圖則是採用內建 theme 主題的 Wordpress 網站畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_wordpresscreated.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;Step 6:&lt;/p&gt;
&lt;p&gt;改用 awesomeone theme, 當以管理者身份登入 Wordpress 網站後, 選擇 Appearance-&amp;gt;Themes, 然後選擇 Add new, 並且以 Awesomeone 關鍵字搜尋, 就可以找到 Awesomeone theme, 選擇 install 並 activate, 就可以改用 Awesome theme 主題了.&lt;/p&gt;
&lt;p&gt;下圖可以看到, Wordpress 所採用的 default theme:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_wordpressdefaulttheme.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;下圖顯示我們可以利用 add new theme, 安裝選用新的網站 theme 主題:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_addnewtheme1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;下圖顯示安裝並啟用 Awesomeone theme 主題:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_awesomeonetheme.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;最後完成啟用 Awesomeone theme 的 Wordpress 網站畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/openshift/c4f_awesomeonetheme1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;總結&lt;/p&gt;
&lt;p&gt;在這篇說明中, 我們利用 Gmail 帳號, 在 OpenShift 雲端平台登記了一個免費帳號, 並且利用這個免費帳號, 建立的一個 Wordpress 網站: &lt;a href="https://wp-topuniversity.rhcloud.com/"&gt;https://wp-topuniversity.rhcloud.com/&lt;/a&gt;, 這個網站使用了 Awesomeone theme, 但是除了內建的 plugin 外, 還沒有啟用其他 plugin, 在隨後的說明, 我們將說明如何將 OpenShift 所建立的網誌與 Godaddy 的網址對應, 而且還要說明如何在 Wordpress 網站中啟用 Disqus 留言系統.&lt;/p&gt;</summary><category term="專題研究"></category><category term="網誌架構"></category><category term="Wordpress"></category><category term="Godaddy"></category><category term="OpenShift"></category></entry><entry><title>我們如何利用程式方法解決自己的問題</title><link href="http://blog.code4future.org/blog/wo-men-ru-he-li-yong-cheng-shi-fang-fa-jie-jue-zi-ji-de-wen-ti.html" rel="alternate"></link><updated>2016-07-12T23:25:55+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-07-12:blog/wo-men-ru-he-li-yong-cheng-shi-fang-fa-jie-jue-zi-ji-de-wen-ti.html</id><summary type="html">&lt;p&gt;在這篇文章中, 我們介紹如何利用 Python3 程式的特性與工具來解決我們在網誌發表上所面臨的問題.&lt;/p&gt;


&lt;p&gt;一般在網路上發表網誌有動態與靜態等兩種選擇, 所謂動態網誌, 就是網誌系統直接在全球資訊網路上提供編修文章與管理的功能, 使用者可以直接利用全球資訊網瀏覽器, 以帳號登入網誌管理系統, 依照使用者權限管理內容.&lt;/p&gt;
&lt;p&gt;動態網誌的好處就是即時而且靈活, 但是壞處則是資料的傳送必須透過全球資訊網程式處理後, 轉為 html 資料格式, 因此使用者擷取網誌內容的反應速度, 較事先已經轉成 html 的靜態網誌慢, 而另外一個壞處則是, 動態網誌將管理系統直接放在全球資訊網伺服器上, 儘管可以透過各種安全防護機制加以保護, 但是仍然帶有被駭客入侵修改內容的風險.&lt;/p&gt;
&lt;p&gt;至於靜態網誌則是使用者利用各種方式編修網誌內容後, 將已經轉成 html 格式的內容送到全球資訊網伺服器, 而在 WWW 伺服器中並沒有提供任何用來管理網誌內容的程式, 因此好處是被擷取的反應速度較動態網誌快, 並且少掉被駭客入侵網誌管理系統的機會, 只有駭客攻破提供全球資訊網伺服器的雲端架構, 靜態網誌內容才可能受到破壞. 而靜態網誌的缺點則是無法像動態網誌一樣, 即時直接讓使用者在瀏覽器中編修文章內容.&lt;/p&gt;
&lt;p&gt;了解動態網誌與靜態網誌的特性後, 一般使用者在建立網誌的過程中, 若希望能夠透過即時協同的方式, 多人共同管理網誌文章, 並且能夠有效保存各階段性的網誌文章內容. 大多採用動態網誌系統. 但是若想要利用類似 Github Pages 的架構, 利用分散式資料管理系統, 例如 GIT, 來管理每一個版本的內容, 則靜態網將會是比動態網誌更適合.&lt;/p&gt;
&lt;p&gt;以 Code4Future 來說, 我們想要同時擁有上述動態與靜態網誌的優點, 但是又必須儘量讓兩個不同系統的內容能夠同步, 於是我們想出利用程式方法來媒合兩種風格迥異的網誌系統.&lt;/p&gt;
&lt;p&gt;基本的作法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;我們其實是同時建立一個 Wordpress 靜態網誌系統與靜態的 Python3 Pelican 網誌系統.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wordpress 網誌系統的用法與一般動態網誌的管理模式相同, 可以讓負責協同的人員建立帳號, 依照帳號權限管理網誌內容.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python3 Pelican 的靜態網誌建立, 也採用一般靜態網誌的建立與上傳方法, 只是我們選擇利用 Github Pages 來伺服我們的靜態網誌.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;結合 Wordpress 與 Pelican 網誌內容的基本技術植基於 &lt;a href="https://zh.wikipedia.org/wiki/XML-RPC"&gt;XML-RPC&lt;/a&gt; 協定, 因為 Wordpress 是採用 PHP 程式語言編寫, 而 Pelican 則是採用 Python 程式語言, 假如沒有中繼的 XML-RPC 協定來轉換兩者的資料內容, 使用者就必須從 Wordpress 儲存資料的資料庫系統下手.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;另外一個重要的程式架構則是, 我們選擇以 &lt;a href="http://leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 來管理這個資料互動的程式流程.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由於從 Pelican 靜態網誌系統將資料轉進或轉出 Wordpress 時, 需要擁有管理資料的帳號密碼, 這時我們利用存在使用者電腦特定位置的帳號密碼讀取, 來登入 Wordpress 系統.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如原始網誌內容先在 Wordpress 建立, 則位於 Leo Editor 專案中的 Pelican 靜態網誌管理系統可以利用 get-from-wp 按鈕將資料取回.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如原始網誌內容先在 Pelican 建立, 則可以利用 Leo Editor 的 new-to-wp 按鈕, 將靜態網誌內容推向 Wordpress.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如 Wordpress 網誌內容更動, 則 Pelican 可以再利用 get-from-wp 按鈕取回最新的資料.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如位於 Pelican 管理系統中的網誌內容更動, 則可以利用 Leo Editor 的 edit-to-wp 按鈕將更新資料推向 Wordpress.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以下為實際的 Leo Editor 按鈕程式碼:&lt;/p&gt;
&lt;p&gt;new-to-wp-button&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#coding: utf-8&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xmlrpc.client&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_cat_tag_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c"&gt;# 請注意, 因為 data 來自 .md 的 body pan 內容, 第1行為 @language python&lt;/span&gt;
    &lt;span class="c"&gt;# 用跳行符號分割&lt;/span&gt;
    &lt;span class="n"&gt;data_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;#第2行為 title&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c"&gt;#第3行為 category&lt;/span&gt;
    &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c"&gt;#第4行為 tags&lt;/span&gt;
    &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c"&gt;# 有多項資料的 content 型別為數列&lt;/span&gt;
    &lt;span class="c"&gt;# 再將第7行之後的資料數列串回成以跳行隔開的資料&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
    &lt;span class="c"&gt;# 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Wordpress 的 &amp;amp;lt;!-more-&amp;amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;amp;lt;!-- PELICAN_END_SUMMARY --&amp;amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;amp;lt;!--more--&amp;amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;~~~python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[code lang=&amp;quot;python&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;~~~&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[/code]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;TZ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Taipei&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;#################################&lt;/span&gt;
&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/amd/Desktop/www-code4future.txt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;wordpress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;www.code4future.org&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;fo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# 從網誌節點的 parent().h 取得 wp_url&lt;/span&gt;
&lt;span class="c"&gt;# 從網誌節點的 parent().b 取得帳號與密碼對應的文字檔案路徑&lt;/span&gt;
&lt;span class="n"&gt;wp_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;wordpress&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/xmlrpc.php&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;wp_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;wp_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;#################################&lt;/span&gt;
&lt;span class="n"&gt;wp_blogid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;status_draft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;status_published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmlrpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServerProxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wp_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 從目前所在節點的 body pan 中取出類別, tags 以及文章內容&lt;/span&gt;
&lt;span class="n"&gt;title_str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category_str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags_str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_cat_tag_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# title 是一個單獨的字串&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# 指定時間出版&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;date_created = xmlrpc.client.DateTime(datetime.datetime.strptime(&amp;quot;2013-01-01 00:00&amp;quot;,&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;%Y-%m-%d %H:%M&amp;quot;))&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# 以現在時間出版, 考慮與 Server 時間差八個小時 (480 分鐘), 因此要在 8 個小時前發表&lt;/span&gt;
&lt;span class="n"&gt;date_created&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmlrpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; \
&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;480&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;categories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;category_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="c"&gt;# 請注意, 因為 tags 用逗點隔開, 因此必須透過 split() 再分開成為 list 資料&lt;/span&gt;
&lt;span class="c"&gt;# 先用 : 斷開標投頭的 Tags:, 然後再透過逗點隔開, 將標註轉為數列資料&lt;/span&gt;
&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tags_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;dateCreated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;date_created&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;mt_keywords&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;post_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;metaWeblog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wp_blogid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wp_username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wp_password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status_published&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# 利用最後的 child 節點來儲存 post_id&lt;/span&gt;
&lt;span class="n"&gt;to_save_post_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insertAsLastChild&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   
&lt;span class="c"&gt;# 改為內文為空的節點, id 直接標在 head 標題 &lt;/span&gt;
&lt;span class="n"&gt;to_save_post_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;to_save_post_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_id&lt;/span&gt;
&lt;span class="c"&gt;# 因為新增節點, commander 必須 redraw&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;redraw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 

&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;es&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post_id 為&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;es&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;已經送出資料!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;edit-to-wp-button&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#coding: utf-8&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xmlrpc.client&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_cat_tag_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c"&gt;# 請注意, 因為 data 來自 .md 的 body pan 內容, 第1行為 @language python&lt;/span&gt;
    &lt;span class="c"&gt;# 用跳行符號分割&lt;/span&gt;
    &lt;span class="n"&gt;data_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;#第2行為 title&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c"&gt;#第3行為 category&lt;/span&gt;
    &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c"&gt;#第4行為 tags&lt;/span&gt;
    &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c"&gt;# 有多項資料的 content 型別為數列&lt;/span&gt;
    &lt;span class="c"&gt;# 再將第7行之後的資料數列串回成以跳行隔開的資料&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
    &lt;span class="c"&gt;# 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Wordpress 的 &amp;amp;lt;!-more-&amp;amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;amp;lt;!-- PELICAN_END_SUMMARY --&amp;amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;amp;lt;!--more--&amp;amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;~~~python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[code lang=&amp;quot;python&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;~~~&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[/code]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;TZ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Taipei&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;#################################&lt;/span&gt;
&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/amd/Desktop/www-code4future.txt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;wordpress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;www.code4future.org&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;fo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;wp_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;wordpress&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/xmlrpc.php&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;wp_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;wp_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;#################################&lt;/span&gt;
&lt;span class="n"&gt;wp_blogid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;status_draft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;status_published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmlrpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServerProxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wp_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 從目前所在節點的 body pan 中取出類別, tags 以及文章內容&lt;/span&gt;
&lt;span class="n"&gt;title_str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category_str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags_str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_cat_tag_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# title 是一個單獨的字串&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# 指定時間出版&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;date_created = xmlrpc.client.DateTime(datetime.datetime.strptime(&amp;quot;2013-01-01 00:00&amp;quot;,&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;%Y-%m-%d %H:%M&amp;quot;))&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# 以現在時間出版, 考慮與 Server 時間差八個小時 (480 分鐘), 因此要在 8 個小時前發表&lt;/span&gt;
&lt;span class="n"&gt;date_created&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmlrpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; \
&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;480&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;categories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;category_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="c"&gt;# 請注意, 因為 tags 用逗點隔開, 因此必須透過 split() 再分開成為 list 資料&lt;/span&gt;
&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tags_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;dateCreated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;date_created&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;mt_keywords&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# 設法取得原 post 的 id&lt;/span&gt;
&lt;span class="n"&gt;origin_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLastChild&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c"&gt;# 直接從標題取得 post 的 id 號碼&lt;/span&gt;
&lt;span class="n"&gt;post_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;origin_post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;metaWeblog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;editPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wp_username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wp_password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status_published&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;es&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;資料已經更新!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;es&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;有問題, 資料沒有更新!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;get-from-wp button&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#coding: utf-8&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xmlrpc.client&lt;/span&gt;
&lt;span class="c"&gt;# 導入 html 模組, 使用 html.unescape 轉換 html 特殊符號&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;html&lt;/span&gt;

&lt;span class="c"&gt;#################################&lt;/span&gt;
&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/amd/Desktop/www-code4future.txt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;wordpress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;www.code4future.org&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;fo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# 從網誌節點的 parent().h 取得 wp_url&lt;/span&gt;
&lt;span class="c"&gt;# 從網誌節點的 parent().b 取得帳號與密碼對應的文字檔案路徑&lt;/span&gt;
&lt;span class="n"&gt;wp_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;wordpress&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/xmlrpc.php&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;wp_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;wp_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;#################################&lt;/span&gt;

&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmlrpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServerProxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wp_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 設法透過上述網誌網址, 帳號與密碼, 以及文章 id, 取回 categories, tags, 文章標題, 文章內容等資&lt;/span&gt;

&lt;span class="c"&gt;# 從最後的 child 節點來取 post_id&lt;/span&gt;
&lt;span class="n"&gt;origin_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLastChild&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;post_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;origin_post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="c"&gt;# 取回與 post_id 對應的網誌文章內容&lt;/span&gt;
&lt;span class="n"&gt;blog_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;metaWeblog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wp_username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wp_password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;blog_content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# 這裡要利用 html.unescape 轉回特殊符號&lt;/span&gt;
&lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blog_content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;mt_text_more&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blog_content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mt_text_more&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;mt_text_more&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;post_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;lt;!--more--&amp;amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;mt_text_more&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;post_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;
&lt;span class="c"&gt;# 所取回的 categories 為 list&lt;/span&gt;
&lt;span class="n"&gt;categories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;blog_content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;categories&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# 所取回的 tags 為以逗點隔開的字串&lt;/span&gt;
&lt;span class="n"&gt;mt_keywords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;blog_content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mt_keywords&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# 取回文章作者&lt;/span&gt;
&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;blog_content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wp_author_display_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;categories_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c"&gt;# 假如不是最後一個&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;categories_str&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# 這是最後一個&lt;/span&gt;
        &lt;span class="n"&gt;categories_str&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;
&lt;span class="n"&gt;line1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;@language md&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;line2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Title: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;line3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Category: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;categories_str&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;line4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Tags: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;mt_keywords&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;line5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Author: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;@others&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;post_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;amp;lt;!--more--&amp;amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;lt;!-- PELICAN_END_SUMMARY --&amp;amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;post_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;[code lang=&amp;quot;python&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;~~~python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;post_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;[/code]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;~~~&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;line2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;line3&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;line4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;line5&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;post_content&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# 因為節點資料更新, commander 必須 redraw&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;redraw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;es&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;資料已經取回&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="專題研究"></category><category term="網誌架構"></category></entry><entry><title>有關社會人士學習電腦</title><link href="http://blog.code4future.org/blog/you-guan-she-hui-ren-shi-xue-xi-dian-nao.html" rel="alternate"></link><updated>2016-03-20T08:13:42+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-20:blog/you-guan-she-hui-ren-shi-xue-xi-dian-nao.html</id><summary type="html">&lt;p&gt;社會人士學習電腦的課題很廣, 我們只能提供較為基本的電腦使用功能與觀念的導引, 例如, 有關 Windows 與 Ubuntu 操作系統的取捨, 如何運用網路與網站來提升工作效率等.&lt;/p&gt;


&lt;p&gt;Code4Future 將與社會人士學習電腦的主題劃分為:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;電腦基本軟硬體層次, 桌上型、筆記型與卡片型電腦的取捨, Windows 或 Ubuntu 操作系統?&lt;/li&gt;
&lt;li&gt;基本的本地端網路協定、設定與應用&lt;/li&gt;
&lt;li&gt;區域網路上的全球資訊網伺服器與雲端全球資訊網伺服器的應用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;全球資訊網上, 免費學習電腦編程的網站:&lt;/p&gt;
&lt;p&gt;CodeCademy：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.codecademy.com/"&gt;https://www.codecademy.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FreeCodeCamp:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.freecodecamp.com/"&gt;https://www.freecodecamp.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Udemy:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.udemy.com/"&gt;https://www.udemy.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Khanacademy:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.khanacademy.org/computing/computer-programming"&gt;https://www.khanacademy.org/computing/computer-programming&lt;/a&gt;&lt;/p&gt;</summary><category term="電腦基本功能"></category></entry><entry><title>全雲端電腦輔助機械設計 3D 套件</title><link href="http://blog.code4future.org/blog/quan-yun-duan-dian-nao-fu-zhu-ji-jie-she-ji-3d-tao-jian.html" rel="alternate"></link><updated>2016-03-20T01:13:14+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-20:blog/quan-yun-duan-dian-nao-fu-zhu-ji-jie-she-ji-3d-tao-jian.html</id><summary type="html">&lt;p&gt;一般人對於所謂的電腦輔助機械設計繪圖套件, 可能都還停留在單機 ,必須安裝, 必須經過軟硬體授權認証才能啟動的單機應用程式. 自從 2015 年3月份開始, 一群曾經在 1993 協助打造全世界第一套個人電腦操作系統上的 MCAD (Mechanical Computer Aided Design) 團隊, 推出了 OnShape, 從此您又多了一個選擇, 可以在各種電腦裝置 (包括手機與平板電腦) 上設計繪製 3D 的零組件, 不僅能與多人進行即時協同設計, 並且可以從擁有 500MB 到 5GB 的免費帳號開始入門.&lt;/p&gt;


&lt;p&gt;今天起, 請您暫時放下其他類似的 MCAD 套件, 開始關注: &lt;a href="https://www.onshape.com/"&gt;https://www.onshape.com/&lt;/a&gt;.&lt;/p&gt;
&lt;video controls autoplay="autoplay" width="800" height="600"&gt;
  &lt;source src="http://code4futuretw.github.io/blogsite_data/files/grab-windows700kb.mp4"&gt;
  Your browser does not support the video tag.
&lt;/video&gt;

&lt;video controls autoplay="autoplay" width="800" height="600"&gt;
  &lt;source src="http://code4futuretw.github.io/blogsite_data/files/ipad-air-720p_700kb.mp4"&gt;
  Your browser does not support the video tag.
&lt;/video&gt;

&lt;video controls autoplay="autoplay" width="800" height="600"&gt;
  &lt;source src="http://code4futuretw.github.io/blogsite_data/files/laptop-720p-apple700kb.mp4"&gt;
  Your browser does not support the video tag.
&lt;/video&gt;</summary><category term="MCAD"></category><category term="CAD"></category></entry><entry><title>如何架構一個動靜皆宜的網誌系統</title><link href="http://blog.code4future.org/blog/ru-he-jia-gou-yi-ge-dong-jing-jie-yi-de-wang-zhi-xi-tong.html" rel="alternate"></link><updated>2016-03-19T13:29:17+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-19:blog/ru-he-jia-gou-yi-ge-dong-jing-jie-yi-de-wang-zhi-xi-tong.html</id><summary type="html">&lt;p&gt;全球資訊網上有兩種基本的 Blog 架構, 動態的網誌以 &lt;a href="https://wordpress.com/"&gt;Wordpress&lt;/a&gt; 為代表, 而靜態的網誌則以 &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; 為例.&lt;/p&gt;


&lt;p&gt;這一篇文章的目的, 在介紹 Code4Future 團隊如何利用 PHP、Python3, 在 OpenShift 雲端平台與 Github 版次管理系統中, 用同 Leo Editor 的專案架構, 以同一份內容, 幾乎同步地更新到動態與靜態的兩個網站.&lt;/p&gt;
&lt;p&gt;首先, Code4Future 目前的動態網站為: &lt;a href="http://www.code4future.org"&gt;http://www.code4future.org&lt;/a&gt;, 而靜態網站則位於 &lt;a href="http://blog.code4future.org"&gt;http://blog.code4future.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;其中的動態網站採用 &lt;a href="https://www.openshift.com/"&gt;Openshift&lt;/a&gt; 雲端平台建構, 而靜態網頁則架構在 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 上.&lt;/p&gt;
&lt;p&gt;從 &lt;a href="https://github.com/code4futuretw/blogsite"&gt;https://github.com/code4futuretw/blogsite&lt;/a&gt; 倉儲, 可以取得 &lt;a href="http://blog.code4future.org"&gt;http://blog.code4future.org&lt;/a&gt; 靜態網誌上的所有資料 ,包括 Pelican 設定與 Leo Editor 專案檔中的所有按鈕指令程式碼.&lt;/p&gt;
&lt;p&gt;首先來看, 如何在 OpenShift 建立一個 Wordpress 網誌:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;到 &lt;a href="https://www.openshift.com/"&gt;https://www.openshift.com/&lt;/a&gt; 申請一個帳號.&lt;/li&gt;
&lt;li&gt;收到 OpenShift 信件後, 按回電子郵箱的確認連結, 就可以開始在 OpenShift 雲端平台上建立應用程式.&lt;/li&gt;
&lt;li&gt;建立應用程式時, 選擇建立 Wordpress 類別的網誌, 並且選擇可用的網域名稱與應用程式名稱, 就可完成 Wordpress 起始設定.&lt;/li&gt;
&lt;li&gt;當建立 Wordpress 應用程式完成後, 使用者即可進行網誌的設定, 其中包括管理者帳號的建立與基本網誌設定.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至於 Github Pages 上的 &lt;a href="http://blog.code4future.org"&gt;http://blog.code4future.org&lt;/a&gt; 靜態網誌, 其架構則比較複雜, 一方面, 我們採用 &lt;a href="http://leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 來管理所有資料. 當使用者從 &lt;a href="https://github.com/code4futuretw/blogsite"&gt;https://github.com/code4futuretw/blogsite&lt;/a&gt; 倉儲 git clone 資料到本地端之後, 必須依靠 Python3, PyQt, Pelican 與 Git 才能順利在本地端與 Github Page 分支端, 順利建立並管理這個靜態網誌系統.&lt;/p&gt;
&lt;p&gt;此外, 我們建構靜態網頁系統的目的, 是希望爾後在實體課堂中推廣 Code4Future 的各階段教材時, 可以無需上到廣域網路, 利用隨身硬碟與區域網路就能夠上課. 因此 Github 倉儲中的 Pelican 系統又分為本地端與雲端平台上的轉檔設定. 使用本靜態網頁時, 基本工作流程如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;從 &lt;a href="https://github.com/code4futuretw/blogsite"&gt;https://github.com/code4futuretw/blogsite&lt;/a&gt; 倉儲, git clone 資料到本地端.&lt;/li&gt;
&lt;li&gt;確定工作目錄中為倉儲的 gh-pages 分支內容.&lt;/li&gt;
&lt;li&gt;利用 Leo Editor 5.1 以後的版本, 開啟 users 目錄下的 c4f.leo, 就可以看到本站的所有資料.&lt;/li&gt;
&lt;li&gt;修改設定檔案內容.&lt;/li&gt;
&lt;li&gt;根據網誌 md 檔案中的格式, 編寫新網誌文章.&lt;/li&gt;
&lt;li&gt;先利用本地端所屬的 local-pelican 按鈕建立網誌文章.&lt;/li&gt;
&lt;li&gt;本地端內容查詢無誤後, 再用 gh-pages-pelican 按鈕, 產升即將送到雲端上的 Pelican 網誌內容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至於將 Pelican 中的 .md 檔案內容, 送到 Wordpress, 則配合 new-to-wp-pelican, edit-to-wp-pelican 與 get-from-wp-pelican 等3個按鈕指令.&lt;/p&gt;</summary><category term="導引"></category></entry></feed>