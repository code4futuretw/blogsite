<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Code4future</title><link href="http://blog.code4future.org/blog/" rel="alternate"></link><link href="http://blog.code4future.org/blog/feeds/all.atom.xml" rel="self"></link><id>http://blog.code4future.org/blog/</id><updated>2016-03-19T23:45:30+08:00</updated><entry><title>數位運算博物館</title><link href="http://blog.code4future.org/blog/shu-wei-yun-suan-bo-wu-guan.html" rel="alternate"></link><updated>2016-03-19T23:45:30+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-19:blog/shu-wei-yun-suan-bo-wu-guan.html</id><summary type="html">&lt;p&gt;台灣是全世界重要的個人電腦生產國之一, 假如能夠有系統收集歷史上與數位運算相關的軟硬體相關資訊, 成立一個實體或虛擬的數位運算博物館, 那麼, 或許下一代年輕人能藉以鑑往知來, 在全球數位公民中扮演更重要的角色.&lt;/p&gt;


&lt;p&gt;英國運算博物館 (National Museum of Computing):&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/_Sw15F2QzMQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;電腦發展史:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://code4futuretw.github.io/blogsite_data/files/computer_history_timeline.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;電腦博物館 (Computer Museum):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/The_Computer_Museum,_Boston"&gt;https://en.wikipedia.org/wiki/The_Computer_Museum,_Boston&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.computerhistory.org/"&gt;http://www.computerhistory.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tcm.computerhistory.org/"&gt;http://tcm.computerhistory.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;從數位基礎到應用:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nand2tetris.org/"&gt;http://www.nand2tetris.org/&lt;/a&gt;&lt;/p&gt;</summary><category term="數位運算"></category><category term="電腦發展史"></category></entry><entry><title>CodeForLife 編程套件介紹</title><link href="http://blog.code4future.org/blog/codeforlife-bian-cheng-tao-jian-jie-shao.html" rel="alternate"></link><updated>2016-03-19T23:04:17+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-19:blog/codeforlife-bian-cheng-tao-jian-jie-shao.html</id><summary type="html">&lt;p&gt;Code for Life &lt;a href="https://www.codeforlife.education/"&gt;https://www.codeforlife.education/&lt;/a&gt; 是一套適合幼稚園到國小兒童使用的編程教育套件.&lt;/p&gt;


&lt;p&gt;Rapid Router 則是其中由英國 Ocado 公司在 &lt;a href="http://www.ocadotechnology.com/our-blog/articles/why-weve-open-sourced-code-for-life"&gt;2015 年 10 月份開源&lt;/a&gt;釋出的全球資訊網套件 (&lt;a href="https://github.com/ocadotechnology/rapid-router"&gt;Rapid Router Github 倉儲&lt;/a&gt;, &lt;a href="https://twitter.com/codeforlifeuk"&gt;Code for Life Twitter&lt;/a&gt;), 採用 Javascript 與 Python 編寫, 並且架構在 &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; 全球資訊網框架上.&lt;/p&gt;
&lt;p&gt;Rapid Router 從圖像編程入手, 規劃了適合 5-11 歲孩童電腦教學的教材, 並且逐步導入 Python 程式語法的教學, 其中的每一份教材都明確訂出進度與標的: &lt;a href="http://storage.googleapis.com/codeforlife-assets/general_resources/introduction_to_coding.pdf"&gt;http://storage.googleapis.com/codeforlife-assets/general_resources/introduction_to_coding.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;同時, 老師註冊帳號後登入系統 ,就可以下載規劃完整的教學導引與學習評量內容, 儘管全部教材都是英文, 但若能夠藉由此份"快車找路"的類遊戲編程教學中, 讓孩童同時學習簡單的英文字句, 應該也是很不錯的額外收穫.&lt;/p&gt;</summary><category term="導引"></category></entry><entry><title>如何架構一個動靜皆宜的網誌系統</title><link href="http://blog.code4future.org/blog/ru-he-jia-gou-yi-ge-dong-jing-jie-yi-de-wang-zhi-xi-tong.html" rel="alternate"></link><updated>2016-03-19T13:29:17+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-19:blog/ru-he-jia-gou-yi-ge-dong-jing-jie-yi-de-wang-zhi-xi-tong.html</id><summary type="html">&lt;p&gt;全球資訊網上有兩種基本的 Blog 架構, 動態的網誌以 &lt;a href="https://wordpress.com/"&gt;Wordpress&lt;/a&gt; 為代表, 而靜態的網誌則以 &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; 為例.&lt;/p&gt;


&lt;p&gt;這一篇文章的目的, 在介紹 Code4Future 團隊如何利用 PHP、Python3, 在 OpenShift 雲端平台與 Github 版次管理系統中, 用同 Leo Editor 的專案架構, 以同一份內容, 幾乎同步地更新到動態與靜態的兩個網站.&lt;/p&gt;
&lt;p&gt;首先, Code4Future 目前的動態網站為: &lt;a href="http://www.code4future.org"&gt;http://www.code4future.org&lt;/a&gt;, 而靜態網站則位於 &lt;a href="http://blog.code4future.org"&gt;http://blog.code4future.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;其中的動態網站採用 &lt;a href="https://www.openshift.com/"&gt;Openshift&lt;/a&gt; 雲端平台建構, 而靜態網頁則架構在 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 上.&lt;/p&gt;
&lt;p&gt;從 &lt;a href="https://github.com/code4futuretw/blogsite"&gt;https://github.com/code4futuretw/blogsite&lt;/a&gt; 倉儲, 可以取得 &lt;a href="http://blog.code4future.org"&gt;http://blog.code4future.org&lt;/a&gt; 靜態網誌上的所有資料 ,包括 Pelican 設定與 Leo Editor 專案檔中的所有按鈕指令程式碼.&lt;/p&gt;
&lt;p&gt;首先來看, 如何在 OpenShift 建立一個 Wordpress 網誌:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;到 &lt;a href="https://www.openshift.com/"&gt;https://www.openshift.com/&lt;/a&gt; 申請一個帳號.&lt;/li&gt;
&lt;li&gt;收到 OpenShift 信件後, 按回電子郵箱的確認連結, 就可以開始在 OpenShift 雲端平台上建立應用程式.&lt;/li&gt;
&lt;li&gt;建立應用程式時, 選擇建立 Wordpress 類別的網誌, 並且選擇可用的網域名稱與應用程式名稱, 就可完成 Wordpress 起始設定.&lt;/li&gt;
&lt;li&gt;當建立 Wordpress 應用程式完成後, 使用者即可進行網誌的設定, 其中包括管理者帳號的建立與基本網誌設定.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至於 Github Pages 上的 &lt;a href="http://blog.code4future.org"&gt;http://blog.code4future.org&lt;/a&gt; 靜態網誌, 其架構則比較複雜, 一方面, 我們採用 &lt;a href="http://leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 來管理所有資料. 當使用者從 &lt;a href="https://github.com/code4futuretw/blogsite"&gt;https://github.com/code4futuretw/blogsite&lt;/a&gt; 倉儲 git clone 資料到本地端之後, 必須依靠 Python3, PyQt, Pelican 與 Git 才能順利在本地端與 Github Page 分支端, 順利建立並管理這個靜態網誌系統.&lt;/p&gt;
&lt;p&gt;此外, 我們建構靜態網頁系統的目的, 是希望爾後在實體課堂中推廣 Code4Future 的各階段教材時, 可以無需上到廣域網路, 利用隨身硬碟與區域網路就能夠上課. 因此 Github 倉儲中的 Pelican 系統又分為本地端與雲端平台上的轉檔設定. 使用本靜態網頁時, 基本工作流程如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;從 &lt;a href="https://github.com/code4futuretw/blogsite"&gt;https://github.com/code4futuretw/blogsite&lt;/a&gt; 倉儲, git clone 資料到本地端.&lt;/li&gt;
&lt;li&gt;確定工作目錄中為倉儲的 gh-pages 分支內容.&lt;/li&gt;
&lt;li&gt;利用 Leo Editor 5.1 以後的版本, 開啟 users 目錄下的 c4f.leo, 就可以看到本站的所有資料.&lt;/li&gt;
&lt;li&gt;修改設定檔案內容.&lt;/li&gt;
&lt;li&gt;根據網誌 md 檔案中的格式, 編寫新網誌文章.&lt;/li&gt;
&lt;li&gt;先利用本地端所屬的 local-pelican 按鈕建立網誌文章.&lt;/li&gt;
&lt;li&gt;本地端內容查詢無誤後, 再用 gh-pages-pelican 按鈕, 產升即將送到雲端上的 Pelican 網誌內容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至於將 Pelican 中的 .md 檔案內容, 送到 Wordpress, 則配合 new-to-wp-pelican, edit-to-wp-pelican 與 get-from-wp-pelican 等3個按鈕指令.&lt;/p&gt;</summary><category term="導引"></category></entry><entry><title>有關學童電腦教學</title><link href="http://blog.code4future.org/blog/you-guan-xue-tong-dian-nao-jiao-xue.html" rel="alternate"></link><updated>2016-03-19T07:49:46+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-19:blog/you-guan-xue-tong-dian-nao-jiao-xue.html</id><summary type="html">&lt;p&gt;數位運算裝置融入各種教學的趨勢已經不可避免, 身為幼稚園到國小的教師, 可以利用現有的優秀教材來推廣學童電腦教學.&lt;/p&gt;


&lt;p&gt;這裡先介紹來自台灣, 兩個很棒的線上教材:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;均一教育平台: &lt;a href="http://www.junyiacademy.org/"&gt;http://www.junyiacademy.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;橘子蘋果程式設計學苑: &lt;a href="https://orangeapple.co/"&gt;https://orangeapple.co/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;均一平台上的電腦課程:&lt;/p&gt;
&lt;p&gt;Scratch: &lt;a href="http://www.junyiacademy.org/root/isc"&gt;http://www.junyiacademy.org/root/isc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Javascript: &lt;a href="http://www.junyiacademy.org/root/ijs"&gt;http://www.junyiacademy.org/root/ijs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一小時玩程式: &lt;a href="http://www.junyiacademy.org/computer-science-a/ihc"&gt;http://www.junyiacademy.org/computer-science-a/ihc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;數學式與 LaTeX: &lt;a href="http://www.junyiacademy.org/computer-science-a/i5t"&gt;http://www.junyiacademy.org/computer-science-a/i5t&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;橘子蘋果開放教材: &lt;a href="https://orangeapple.co/csr/open-material"&gt;https://orangeapple.co/csr/open-material&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後則介紹來自美國哈佛大學的 Scratch 開放教材: &lt;a href="http://scratched.gse.harvard.edu/guide/"&gt;http://scratched.gse.harvard.edu/guide/&lt;/a&gt;&lt;/p&gt;</summary><category term="導引"></category></entry><entry><title>有關社會人士學習電腦</title><link href="http://blog.code4future.org/blog/you-guan-she-hui-ren-shi-xue-xi-dian-nao.html" rel="alternate"></link><updated>2016-03-19T07:40:27+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-19:blog/you-guan-she-hui-ren-shi-xue-xi-dian-nao.html</id><summary type="html">&lt;p&gt;社會人士學習電腦的課題很廣, 我們只能提供較為廣泛的電腦基本使用功能與觀念的導引, 例如, 有關 Windows 與 Ubuntu 操作系統的取捨, 如何運用網路與網站來提升工作效率等.&lt;/p&gt;


&lt;p&gt;Code4Future 將與社會人士學習電腦的主題劃分為:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;電腦基本軟硬體層次, 桌上型、筆記型與卡片型電腦的取捨, Windows 或 Ubuntu 操作系統?&lt;/li&gt;
&lt;li&gt;基本的本地端網路協定、設定與應用&lt;/li&gt;
&lt;li&gt;區域網路上的全球資訊網伺服器與雲端全球資訊網伺服器的應用&lt;/li&gt;
&lt;/ol&gt;</summary><category term="電腦基本功能"></category></entry><entry><title>家長如何制定網路使用政策</title><link href="http://blog.code4future.org/blog/jia-chang-ru-he-zhi-ding-wang-lu-shi-yong-zheng-ce.html" rel="alternate"></link><updated>2016-03-19T07:16:13+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-19:blog/jia-chang-ru-he-zhi-ding-wang-lu-shi-yong-zheng-ce.html</id><summary type="html">&lt;p&gt;無論您從事那一個行業, 週遭一定充滿了各種網路與大小電腦的應用, 從大樓的門禁開始, 電梯、飲水機, 更不用提許多人辦公地點幾乎都各有一台桌上型或筆記型的個人電腦, 透過無線或有線網路與各種資訊系統或網站相連, 未來, 有關網路與電腦的各種應用, 更會密切涉入現代人的生活.&lt;/p&gt;


&lt;p&gt;因此, 身為家長的您, 除了必須體認到未來的現代國民已經離不開網路與電腦之外, 必須了解目前全世界有關網路內容分級, 都是採取軟性的自我管制模式, 所以各位家長必須自己在家裡, 嚴格制定未成年兒童的網路使用政策.&lt;/p&gt;
&lt;p&gt;我們的認知:&lt;/p&gt;
&lt;p&gt;未成年兒童, 不應該獨自使用公共網路, 更不應該在沒有家長的管制下, 上網交友.&lt;/p&gt;
&lt;p&gt;根據 Facebook 的規定 &lt;a href="https://www.facebook.com/help/210644045634222"&gt;13 歲以上&lt;/a&gt; 才能建立帳號, 也就是 grade 7, 國中之後的年輕人才能夠使用臉書, 所以身為家長, 必須限制國小學童在家自由使用網路與電腦 (包括手機) 的權力, 假如配合學校功課的要求,  13 歲之前的孩童, 最好是在家長的陪同下使用廣域網路與電腦.&lt;/p&gt;</summary><category term="網路操作"></category></entry><entry><title>為什麼大家都要你學電腦?</title><link href="http://blog.code4future.org/blog/wei-shi-mo-da-jia-du-yao-ni-xue-dian-nao.html" rel="alternate"></link><updated>2016-03-09T19:03:50+08:00</updated><author><name>code4future</name></author><id>tag:blog.code4future.org,2016-03-09:blog/wei-shi-mo-da-jia-du-yao-ni-xue-dian-nao.html</id><summary type="html">&lt;p&gt;學電腦?學習寫程式?然後呢?&lt;/p&gt;


&lt;p&gt;學電腦是一個非常廣的題目, 因為電腦原來的意思是計算器, 現在的計算器到處都是, 從冷氣的溫度控制到手機, 都是不同等級的電腦. 所以嚴格來說, 與電腦有關的學習是學不完的, 當全世界許多現代人都已經離不開電腦的時候, 所謂的學電腦, 應該是指:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;了解電腦的基本軟體與硬體運作原理&lt;/li&gt;
&lt;li&gt;了解電腦的基本操作方法&lt;/li&gt;
&lt;li&gt;了解如何操控電腦, 並且用電腦來協助解決問題&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;接著來回答, 為什麼大家都叫你學電腦?最主要的原因就是, 現代人無論從事那一個行業, 都需要依賴電腦來解決問題, 所以假如學生能夠從小就知道什麼叫作數位運算, 有那些特性, 與現實世界的運作有那些關聯, 學習如何利用電腦來增加工作效率, 那麼才能在父母與老師的協助下, 真正發揮電腦的功用.&lt;/p&gt;
&lt;p&gt;這一篇文章的類別是: K-12, K 指的是幼稚園的學生, 也就是五歲到六歲的孩童, 我們當然不是寫文章給幼稚園的小朋友看的, 但這裡指的 12, 就是 12 年國教的學生, 從小學一年級開始到高中畢業, 總共 12 年, 假如你是國小高年級以上的學生, 已經可以利用 Code4future 網站上的資料, 進行自學, 但是我們並不鼓勵你們這樣做, 因為你們還沒有成年, 也就是還沒有滿十八歲, 根據我們的經驗, 未成年的學生是不允許獨自上網的, 希望能夠在家長或老師的指導下, 下載 Code4future 上的教案資料, 可以在沒有外部網路 (也稱為廣域網路) 的單機或內部網路上執行.&lt;/p&gt;
&lt;p&gt;我們特別鼓勵過去以為學電腦就是玩遊戲的國小高年級學生, 能夠在家長與老師的協助下, 儘早學習利用電腦來解決問題的訣竅, 讓你可以更加了解學習的樂趣, 並且有效率地學習其他學科, 以便空出更多時間發展個人技藝或專長.&lt;/p&gt;
&lt;p&gt;這裡要介紹的電腦程式學習課程之一是 Reeborg 機器人: &lt;a href="http://reeborg.ca/world.html"&gt;http://reeborg.ca/world.html&lt;/a&gt;, 假如你用瀏覽器打開這個頁面之後, 完全看不懂其中的英文字與說明段落, 我們希望你不要用翻譯軟體來看這些資料, 因為我們要告訴你, 想學好電腦, 英文能力是必備條件, 而且基本的數學能力也是有效運用電腦的另一個必要條件, 所以不要以為只要學會使用電腦, 就可以丟開其他課本, 正確的學習電腦觀念是:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;未成年學生不要獨自上網, 因為網路上沒有用的東西比有用的資料, 多了許多, 你要在老師與家長的安排之下才能使用電腦與網路.&lt;/li&gt;
&lt;li&gt;電腦與數學及英文, 或者其他各種學科, 都有很密切的關聯, 學習電腦是要讓你的學習更有效率, 及早掌握現代人協同合作的方式.&lt;/li&gt;
&lt;li&gt;學習電腦的主要目的在解決問題, 這些問題當然包括用有效率的方式來提供使用者遊戲或運動或玩樂.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最後, 我們再次提醒你, 為什麼大家都叫你學電腦? 因為我們希望你未來能夠快速融入國際社會, 利用電腦解決各種問題, 做一個有用的青年, 造福社會!&lt;/p&gt;</summary><category term="Reeborg 機器人"></category></entry><entry><title>Code4future user 文章套稿</title><link href="http://blog.code4future.org/blog/code4future-user-wen-zhang-tao-gao.html" rel="alternate"></link><updated>2016-03-06T21:52:24+08:00</updated><author><name>user</name></author><id>tag:blog.code4future.org,2016-03-06:blog/code4future-user-wen-zhang-tao-gao.html</id><summary type="html">&lt;p&gt;這裡可以放入文章的摘要內容&lt;/p&gt;


&lt;h1&gt;文章標題&lt;/h1&gt;
&lt;p&gt;這裡開始文章內容&lt;/p&gt;
&lt;p&gt;文章內放入超文件的連結:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://code4future.org"&gt;http://code4future.org&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;文章子標題&lt;/h2&gt;
&lt;p&gt;文章內放入圖片:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.google.com.tw/images/nav_logo242_hr.png" width="300"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;h1&gt;引入程式碼&lt;/h1&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="c"&gt;# Pythagoras Theorem&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hypotenuse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;side1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;side1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;side2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;side1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;side2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hypotenuse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;side1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="n"&gt;triangle&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;side1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;, side1, &amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;side2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;, side2, &amp;quot;&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;hypotenuse&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;, h)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="協同網誌"></category></entry></feed>